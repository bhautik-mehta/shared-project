import { Component, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/fire/compat/firestore";
import * as i2 from "../core/_services/auth.services";
import * as i3 from "@angular/fire/compat/storage";
import * as i4 from "@ionic/angular";
import * as i5 from "@angular/common";
export class ShowimgComponent {
    constructor(db, Api, storage) {
        this.db = db;
        this.Api = Api;
        this.storage = storage;
        this.basePath = '/RoomsImages';
        this.date = [];
        this.position = 'floating';
        this.mode = "mode";
        this.showImgApiOutput = new EventEmitter();
    }
    ngOnInit() {
        this.db.collection('images').valueChanges().subscribe(res => {
            if (res !== [''])
                this.date = res;
        });
    }
}
ShowimgComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: ShowimgComponent, deps: [{ token: i1.AngularFirestore }, { token: i2.AuthService }, { token: i3.AngularFireStorage }], target: i0.ɵɵFactoryTarget.Component });
ShowimgComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.2.7", type: ShowimgComponent, selector: "shared-showimg", inputs: { position: "position", mode: "mode" }, outputs: { showImgApiOutput: "showImgApiOutput" }, ngImport: i0, template: "<ion-header [translucent]=\"true\">\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-title>\r\n      My home camera\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content [fullscreen]=\"true\">\r\n  <ion-content class=\"ion-padding\">\r\n    <div class=\"preview\">\r\n      this is preview below\r\n      <div class=\"show-img\">\r\n        <div class=\"images-preview\" *ngFor=\"let items of date\">\r\n          <img src={{items.url}} class=\"img-responsive\" alt=\"{{items.url}}\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </ion-content>\r\n</ion-content>\r\n", styles: [".show-img{display:grid;grid-template-columns:repeat(5,1fr);grid-gap:10px;gap:10px}.images-preview{height:300px;width:300px;object-fit:contain}.img-responsive{width:100%;height:100%;max-width:100%;max-height:100%;object-fit:contain}\n"], components: [{ type: i4.IonHeader, selector: "ion-header", inputs: ["collapse", "mode", "translucent"] }, { type: i4.IonToolbar, selector: "ion-toolbar", inputs: ["color", "mode"] }, { type: i4.IonTitle, selector: "ion-title", inputs: ["color", "size"] }, { type: i4.IonContent, selector: "ion-content", inputs: ["color", "forceOverscroll", "fullscreen", "scrollEvents", "scrollX", "scrollY"] }], directives: [{ type: i5.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: ShowimgComponent, decorators: [{
            type: Component,
            args: [{ selector: 'shared-showimg', template: "<ion-header [translucent]=\"true\">\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-title>\r\n      My home camera\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content [fullscreen]=\"true\">\r\n  <ion-content class=\"ion-padding\">\r\n    <div class=\"preview\">\r\n      this is preview below\r\n      <div class=\"show-img\">\r\n        <div class=\"images-preview\" *ngFor=\"let items of date\">\r\n          <img src={{items.url}} class=\"img-responsive\" alt=\"{{items.url}}\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </ion-content>\r\n</ion-content>\r\n", styles: [".show-img{display:grid;grid-template-columns:repeat(5,1fr);grid-gap:10px;gap:10px}.images-preview{height:300px;width:300px;object-fit:contain}.img-responsive{width:100%;height:100%;max-width:100%;max-height:100%;object-fit:contain}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.AngularFirestore }, { type: i2.AuthService }, { type: i3.AngularFireStorage }]; }, propDecorators: { position: [{
                type: Input
            }], mode: [{
                type: Input
            }], showImgApiOutput: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hvd2ltZy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvYXBwL2F1dGgvc2hvd2ltZy9zaG93aW1nLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9hcHAvYXV0aC9zaG93aW1nL3Nob3dpbWcuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFVLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7OztBQWMvRSxNQUFNLE9BQU8sZ0JBQWdCO0lBTTNCLFlBQW9CLEVBQW9CLEVBQVUsR0FBZ0IsRUFBVSxPQUEyQjtRQUFuRixPQUFFLEdBQUYsRUFBRSxDQUFrQjtRQUFVLFFBQUcsR0FBSCxHQUFHLENBQWE7UUFBVSxZQUFPLEdBQVAsT0FBTyxDQUFvQjtRQUwvRixhQUFRLEdBQUcsY0FBYyxDQUFDO1FBQ2xDLFNBQUksR0FBRyxFQUFFLENBQUM7UUFDRCxhQUFRLEdBQUcsVUFBVSxDQUFDO1FBQ3RCLFNBQUksR0FBRyxNQUFNLENBQUM7UUFDYixxQkFBZ0IsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO0lBQzJELENBQUM7SUFFNUcsUUFBUTtRQUNOLElBQUksQ0FBQyxFQUFFLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDLFlBQVksRUFBRSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsRUFBRTtZQUMxRCxJQUFJLEdBQUcsS0FBSyxDQUFDLEVBQUUsQ0FBQztnQkFDZCxJQUFJLENBQUMsSUFBSSxHQUFHLEdBQUcsQ0FBQTtRQUNuQixDQUFDLENBQUMsQ0FBQztJQUVMLENBQUM7OzZHQWRVLGdCQUFnQjtpR0FBaEIsZ0JBQWdCLHlKQ2Q3QixxbEJBbUJBOzJGRExhLGdCQUFnQjtrQkFMNUIsU0FBUzsrQkFDRSxnQkFBZ0I7a0tBT2pCLFFBQVE7c0JBQWhCLEtBQUs7Z0JBQ0csSUFBSTtzQkFBWixLQUFLO2dCQUNJLGdCQUFnQjtzQkFBekIsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT25Jbml0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQW5ndWxhckZpcmVEYXRhYmFzZSB9IGZyb20gJ0Bhbmd1bGFyL2ZpcmUvY29tcGF0L2RhdGFiYXNlJztcclxuaW1wb3J0IHsgQW5ndWxhckZpcmVTdG9yYWdlIH0gZnJvbSAnQGFuZ3VsYXIvZmlyZS9jb21wYXQvc3RvcmFnZSc7XHJcbmltcG9ydCB7IE5hdmlnYXRpb25FbmQsIFJvdXRlciB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XHJcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcclxuaW1wb3J0IHsgQXV0aFNlcnZpY2UgfSBmcm9tICcuLi9jb3JlL19zZXJ2aWNlcy9hdXRoLnNlcnZpY2VzJztcclxuaW1wb3J0IHsgRmlsZVVwbG9hZCB9IGZyb20gJy4uL21vZGVsL2ZpbGUtdXBsb2FkJztcclxuaW1wb3J0IHsgZ2V0U3RvcmFnZSwgcmVmLCBsaXN0QWxsIH0gZnJvbSBcImZpcmViYXNlL3N0b3JhZ2VcIjtcclxuaW1wb3J0IHsgQW5ndWxhckZpcmVzdG9yZSB9IGZyb20gJ0Bhbmd1bGFyL2ZpcmUvY29tcGF0L2ZpcmVzdG9yZSc7XHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnc2hhcmVkLXNob3dpbWcnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9zaG93aW1nLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9zaG93aW1nLmNvbXBvbmVudC5zY3NzJ10sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTaG93aW1nQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuICBwcml2YXRlIGJhc2VQYXRoID0gJy9Sb29tc0ltYWdlcyc7XHJcbiAgZGF0ZSA9IFtdO1xyXG4gIEBJbnB1dCgpIHBvc2l0aW9uID0gJ2Zsb2F0aW5nJztcclxuICBASW5wdXQoKSBtb2RlID0gXCJtb2RlXCI7XHJcbiAgQE91dHB1dCgpIHNob3dJbWdBcGlPdXRwdXQgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBkYjogQW5ndWxhckZpcmVzdG9yZSwgcHJpdmF0ZSBBcGk6IEF1dGhTZXJ2aWNlLCBwcml2YXRlIHN0b3JhZ2U6IEFuZ3VsYXJGaXJlU3RvcmFnZSkgeyB9XHJcbiAgdHV0b3JpYWxzXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLmRiLmNvbGxlY3Rpb24oJ2ltYWdlcycpLnZhbHVlQ2hhbmdlcygpLnN1YnNjcmliZShyZXMgPT4ge1xyXG4gICAgICBpZiAocmVzICE9PSBbJyddKVxyXG4gICAgICAgIHRoaXMuZGF0ZSA9IHJlc1xyXG4gICAgfSk7XHJcblxyXG4gIH1cclxufVxyXG4iLCI8aW9uLWhlYWRlciBbdHJhbnNsdWNlbnRdPVwidHJ1ZVwiPlxyXG4gIDxpb24tdG9vbGJhciBjb2xvcj1cInByaW1hcnlcIj5cclxuICAgIDxpb24tdGl0bGU+XHJcbiAgICAgIE15IGhvbWUgY2FtZXJhXHJcbiAgICA8L2lvbi10aXRsZT5cclxuICA8L2lvbi10b29sYmFyPlxyXG48L2lvbi1oZWFkZXI+XHJcbjxpb24tY29udGVudCBbZnVsbHNjcmVlbl09XCJ0cnVlXCI+XHJcbiAgPGlvbi1jb250ZW50IGNsYXNzPVwiaW9uLXBhZGRpbmdcIj5cclxuICAgIDxkaXYgY2xhc3M9XCJwcmV2aWV3XCI+XHJcbiAgICAgIHRoaXMgaXMgcHJldmlldyBiZWxvd1xyXG4gICAgICA8ZGl2IGNsYXNzPVwic2hvdy1pbWdcIj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiaW1hZ2VzLXByZXZpZXdcIiAqbmdGb3I9XCJsZXQgaXRlbXMgb2YgZGF0ZVwiPlxyXG4gICAgICAgICAgPGltZyBzcmM9e3tpdGVtcy51cmx9fSBjbGFzcz1cImltZy1yZXNwb25zaXZlXCIgYWx0PVwie3tpdGVtcy51cmx9fVwiIC8+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgPC9kaXY+XHJcbiAgPC9pb24tY29udGVudD5cclxuPC9pb24tY29udGVudD5cclxuIl19