import { Component, EventEmitter, Input, Output } from '@angular/core';
import { Validators } from '@angular/forms';
import { MustMatch } from '../core/_helpers/must-match.validator';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "../core/_services/auth.services";
import * as i3 from "@ionic/angular";
import * as i4 from "../../ui-shared/label/label.component";
import * as i5 from "../../ui-shared/input/input.component";
import * as i6 from "../../ui-shared/span/span.component";
import * as i7 from "@angular/common";
export class SignupComponent {
    constructor(FB, auth) {
        this.FB = FB;
        this.auth = auth;
        this.position = 'floating';
        this.mode = "mode";
        this.signUpApiOutput = new EventEmitter();
        this.emailValidation = "^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$";
        this.passwordValidation = "^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$";
        this.setDefaultData();
    }
    get f() {
        return this.signupForm.controls;
    }
    ngOnInit() { }
    setDefaultData() {
        this.isFormSubmit = false;
        this.signupForm = this.FB.group({
            email: ['', [
                    Validators.required,
                    Validators.pattern(this.emailValidation)
                ]],
            password: ['', [
                    Validators.required,
                    Validators.pattern(this.passwordValidation)
                ]],
            confirm: ['', [
                    Validators.required
                ]]
        }, {
            validator: MustMatch('password', 'confirm')
        });
    }
    setEmitData(data, type) {
        switch (type.toString().toLowerCase()) {
            case 'email':
                this.f.email.setValue(data);
                break;
            case 'password':
                this.f.password.setValue(data);
                break;
            case 'confirm':
                this.f.confirm.setValue(data);
                break;
            default:
                break;
        }
    }
    submitForm() {
        this.isFormSubmit = true;
        if (this.signupForm.invalid) {
            return;
        }
        this.auth.SignUp(this.f.email.value, this.f.password.value).then(res => {
            this.signUpApiOutput.next({
                isApiCalled: true,
                isApiSuccess: true,
                response: res
            });
            console.log(res);
        }).catch(err => {
            this.signUpApiOutput.next({
                isApiCalled: true,
                isApiSuccess: false,
                response: err
            });
            console.log('Something went wrong:', err.message);
        });
    }
}
SignupComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: SignupComponent, deps: [{ token: i1.FormBuilder }, { token: i2.AuthService }], target: i0.ɵɵFactoryTarget.Component });
SignupComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.2.7", type: SignupComponent, selector: "shared-signup", inputs: { position: "position", mode: "mode" }, outputs: { signUpApiOutput: "signUpApiOutput" }, ngImport: i0, template: "<ion-content>\r\n  <form [formGroup]=\"signupForm\" (ngSubmit)=\"submitForm()\" novalidate>\r\n    <ion-item lines=\"full\" [mode]=\"mode\">\r\n      <ui-label [text]=\"'Email'\" [position]=\"position\" [mode]=\"mode\"></ui-label>\r\n      <ui-input class=\"width-100\" [mode]=\"mode\"\r\n        [type]=\"'text'\" [required]=\"true\" formControlName=\"email\"\r\n        [placeholder]=\"'Enter email'\" (newValue)=\"setEmitData($event, 'email')\"\r\n      ></ui-input>\r\n      <small *ngIf=\"isFormSubmit && f.email.errors\">\r\n        <ui-span *ngIf=\"f.email.errors.required\" [mode]=\"mode\" [text]=\"'Email is required'\" [color]=\"'danger'\"></ui-span>\r\n        <ui-span *ngIf=\"f.email.errors.pattern\" [mode]=\"mode\" [text]=\"'Email is invalid'\" [color]=\"'danger'\"></ui-span>\r\n      </small>\r\n    </ion-item>\r\n    <ion-item lines=\"full\" [mode]=\"mode\">\r\n      <ui-label [text]=\"'Password'\" [mode]=\"mode\" [position]=\"position\"></ui-label>\r\n      <ui-input class=\"width-100\" [mode]=\"mode\"\r\n        [type]=\"'text'\" [required]=\"true\" formControlName=\"password\"\r\n        [placeholder]=\"'Enter password'\" (newValue)=\"setEmitData($event, 'password')\"\r\n      ></ui-input>\r\n      <small *ngIf=\"isFormSubmit && f.password.errors\">\r\n        <ui-span *ngIf=\"f.password.errors.required\" [mode]=\"mode\" [text]=\"'Password is required'\" [color]=\"'danger'\"></ui-span>\r\n        <ui-span *ngIf=\"f.password.errors.pattern\" [mode]=\"mode\" [text]=\"'Password is invalid'\" [color]=\"'danger'\"></ui-span>\r\n      </small>\r\n    </ion-item>\r\n    <ion-item lines=\"full\" [mode]=\"mode\">\r\n      <ui-label [text]=\"'Confirm Password'\" [mode]=\"mode\" [position]=\"position\"></ui-label>\r\n      <ui-input class=\"width-100\" [mode]=\"mode\"\r\n        [type]=\"'password'\" [required]=\"true\" formControlName=\"confirm\"\r\n        [placeholder]=\"'Enter confirm password'\" (newValue)=\"setEmitData($event, 'confirm')\"\r\n      ></ui-input>\r\n      <small *ngIf=\"isFormSubmit && f.confirm.errors\">\r\n        <ui-span *ngIf=\"f.confirm.errors.required\" [mode]=\"mode\" [text]=\"'Confirm Password is required'\" [color]=\"'danger'\"></ui-span>\r\n        <ui-span *ngIf=\"f.confirm.errors.mustMatch\" [mode]=\"mode\" [text]=\"'Confirm Password must match with password'\" [color]=\"'danger'\"></ui-span>\r\n      </small>\r\n    </ion-item>\r\n    <ion-row>\r\n      <ion-col>\r\n        <ion-button type=\"submit\" color=\"primary\" expand=\"block\" [mode]=\"mode\">Sign Up</ion-button>\r\n      </ion-col>\r\n    </ion-row>\r\n  </form>\r\n</ion-content>", styles: [""], components: [{ type: i3.IonContent, selector: "ion-content", inputs: ["color", "forceOverscroll", "fullscreen", "scrollEvents", "scrollX", "scrollY"] }, { type: i3.IonItem, selector: "ion-item", inputs: ["button", "color", "counter", "counterFormatter", "detail", "detailIcon", "disabled", "download", "fill", "href", "lines", "mode", "rel", "routerAnimation", "routerDirection", "shape", "target", "type"] }, { type: i4.LabelComponent, selector: "ui-label", inputs: ["text", "class", "color", "position", "mode"] }, { type: i5.InputComponent, selector: "ui-input", inputs: ["placeholder", "type", "name", "color", "readonly", "required", "mode", "disabled", "value"], outputs: ["newValue"] }, { type: i6.SpanComponent, selector: "ui-span", inputs: ["text", "class", "color", "mode"] }, { type: i3.IonRow, selector: "ion-row" }, { type: i3.IonCol, selector: "ion-col", inputs: ["offset", "offsetLg", "offsetMd", "offsetSm", "offsetXl", "offsetXs", "pull", "pullLg", "pullMd", "pullSm", "pullXl", "pullXs", "push", "pushLg", "pushMd", "pushSm", "pushXl", "pushXs", "size", "sizeLg", "sizeMd", "sizeSm", "sizeXl", "sizeXs"] }, { type: i3.IonButton, selector: "ion-button", inputs: ["buttonType", "color", "disabled", "download", "expand", "fill", "href", "mode", "rel", "routerAnimation", "routerDirection", "shape", "size", "strong", "target", "type"] }], directives: [{ type: i1.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1.FormControlName, selector: "[formControlName]", inputs: ["formControlName", "disabled", "ngModel"], outputs: ["ngModelChange"] }, { type: i1.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i7.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: SignupComponent, decorators: [{
            type: Component,
            args: [{ selector: 'shared-signup', template: "<ion-content>\r\n  <form [formGroup]=\"signupForm\" (ngSubmit)=\"submitForm()\" novalidate>\r\n    <ion-item lines=\"full\" [mode]=\"mode\">\r\n      <ui-label [text]=\"'Email'\" [position]=\"position\" [mode]=\"mode\"></ui-label>\r\n      <ui-input class=\"width-100\" [mode]=\"mode\"\r\n        [type]=\"'text'\" [required]=\"true\" formControlName=\"email\"\r\n        [placeholder]=\"'Enter email'\" (newValue)=\"setEmitData($event, 'email')\"\r\n      ></ui-input>\r\n      <small *ngIf=\"isFormSubmit && f.email.errors\">\r\n        <ui-span *ngIf=\"f.email.errors.required\" [mode]=\"mode\" [text]=\"'Email is required'\" [color]=\"'danger'\"></ui-span>\r\n        <ui-span *ngIf=\"f.email.errors.pattern\" [mode]=\"mode\" [text]=\"'Email is invalid'\" [color]=\"'danger'\"></ui-span>\r\n      </small>\r\n    </ion-item>\r\n    <ion-item lines=\"full\" [mode]=\"mode\">\r\n      <ui-label [text]=\"'Password'\" [mode]=\"mode\" [position]=\"position\"></ui-label>\r\n      <ui-input class=\"width-100\" [mode]=\"mode\"\r\n        [type]=\"'text'\" [required]=\"true\" formControlName=\"password\"\r\n        [placeholder]=\"'Enter password'\" (newValue)=\"setEmitData($event, 'password')\"\r\n      ></ui-input>\r\n      <small *ngIf=\"isFormSubmit && f.password.errors\">\r\n        <ui-span *ngIf=\"f.password.errors.required\" [mode]=\"mode\" [text]=\"'Password is required'\" [color]=\"'danger'\"></ui-span>\r\n        <ui-span *ngIf=\"f.password.errors.pattern\" [mode]=\"mode\" [text]=\"'Password is invalid'\" [color]=\"'danger'\"></ui-span>\r\n      </small>\r\n    </ion-item>\r\n    <ion-item lines=\"full\" [mode]=\"mode\">\r\n      <ui-label [text]=\"'Confirm Password'\" [mode]=\"mode\" [position]=\"position\"></ui-label>\r\n      <ui-input class=\"width-100\" [mode]=\"mode\"\r\n        [type]=\"'password'\" [required]=\"true\" formControlName=\"confirm\"\r\n        [placeholder]=\"'Enter confirm password'\" (newValue)=\"setEmitData($event, 'confirm')\"\r\n      ></ui-input>\r\n      <small *ngIf=\"isFormSubmit && f.confirm.errors\">\r\n        <ui-span *ngIf=\"f.confirm.errors.required\" [mode]=\"mode\" [text]=\"'Confirm Password is required'\" [color]=\"'danger'\"></ui-span>\r\n        <ui-span *ngIf=\"f.confirm.errors.mustMatch\" [mode]=\"mode\" [text]=\"'Confirm Password must match with password'\" [color]=\"'danger'\"></ui-span>\r\n      </small>\r\n    </ion-item>\r\n    <ion-row>\r\n      <ion-col>\r\n        <ion-button type=\"submit\" color=\"primary\" expand=\"block\" [mode]=\"mode\">Sign Up</ion-button>\r\n      </ion-col>\r\n    </ion-row>\r\n  </form>\r\n</ion-content>", styles: [""] }]
        }], ctorParameters: function () { return [{ type: i1.FormBuilder }, { type: i2.AuthService }]; }, propDecorators: { position: [{
                type: Input
            }], mode: [{
                type: Input
            }], signUpApiOutput: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lnbnVwLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9hcHAvYXV0aC9zaWdudXAvc2lnbnVwLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9hcHAvYXV0aC9zaWdudXAvc2lnbnVwLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBVSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDL0UsT0FBTyxFQUEwQixVQUFVLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNwRSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sdUNBQXVDLENBQUM7Ozs7Ozs7OztBQVFsRSxNQUFNLE9BQU8sZUFBZTtJQVkxQixZQUNVLEVBQWUsRUFDZixJQUFpQjtRQURqQixPQUFFLEdBQUYsRUFBRSxDQUFhO1FBQ2YsU0FBSSxHQUFKLElBQUksQ0FBYTtRQVRsQixhQUFRLEdBQUcsVUFBVSxDQUFDO1FBQ3RCLFNBQUksR0FBRyxNQUFNLENBQUM7UUFDYixvQkFBZSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFFL0Msb0JBQWUsR0FBRywrS0FBK0ssQ0FBQztRQUNsTSx1QkFBa0IsR0FBRyxrRUFBa0UsQ0FBQztRQU10RixJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7SUFDeEIsQ0FBQztJQUVELElBQUksQ0FBQztRQUNILE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUM7SUFDbEMsQ0FBQztJQUVELFFBQVEsS0FBSSxDQUFDO0lBRWIsY0FBYztRQUNaLElBQUksQ0FBQyxZQUFZLEdBQUcsS0FBSyxDQUFDO1FBQzFCLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUM7WUFDOUIsS0FBSyxFQUFFLENBQUUsRUFBRSxFQUFFO29CQUNYLFVBQVUsQ0FBQyxRQUFRO29CQUNuQixVQUFVLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUM7aUJBQ3pDLENBQUM7WUFDRixRQUFRLEVBQUUsQ0FBQyxFQUFFLEVBQUU7b0JBQ2IsVUFBVSxDQUFDLFFBQVE7b0JBQ25CLFVBQVUsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLGtCQUFrQixDQUFDO2lCQUM1QyxDQUFDO1lBQ0YsT0FBTyxFQUFFLENBQUMsRUFBRSxFQUFFO29CQUNaLFVBQVUsQ0FBQyxRQUFRO2lCQUNwQixDQUFDO1NBQ0gsRUFBRTtZQUNELFNBQVMsRUFBRSxTQUFTLENBQUMsVUFBVSxFQUFFLFNBQVMsQ0FBQztTQUM1QyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsV0FBVyxDQUFDLElBQUksRUFBRSxJQUFJO1FBQ3BCLFFBQU8sSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDLFdBQVcsRUFBRSxFQUFFO1lBQ3BDLEtBQUssT0FBTztnQkFDVixJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQzVCLE1BQU07WUFDUixLQUFLLFVBQVU7Z0JBQ2IsSUFBSSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUMvQixNQUFNO1lBQ1IsS0FBSyxTQUFTO2dCQUNaLElBQUksQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDOUIsTUFBTTtZQUNSO2dCQUNFLE1BQU07U0FDVDtJQUNILENBQUM7SUFFRCxVQUFVO1FBQ1IsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUM7UUFFekIsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLE9BQU8sRUFBRTtZQUMzQixPQUFPO1NBQ1I7UUFFRCxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFO1lBQ3JFLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDO2dCQUN4QixXQUFXLEVBQUUsSUFBSTtnQkFDakIsWUFBWSxFQUFFLElBQUk7Z0JBQ2xCLFFBQVEsRUFBRSxHQUFHO2FBQ2QsQ0FBQyxDQUFDO1lBQ0gsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNuQixDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLEVBQUU7WUFDYixJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQztnQkFDeEIsV0FBVyxFQUFFLElBQUk7Z0JBQ2pCLFlBQVksRUFBRSxLQUFLO2dCQUNuQixRQUFRLEVBQUUsR0FBRzthQUNkLENBQUMsQ0FBQztZQUNILE9BQU8sQ0FBQyxHQUFHLENBQUMsdUJBQXVCLEVBQUUsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ3BELENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQzs7NEdBbEZVLGVBQWU7Z0dBQWYsZUFBZSxzSkNWNUIsNmpGQXlDYzsyRkQvQkQsZUFBZTtrQkFMM0IsU0FBUzsrQkFDRSxlQUFlOzRIQVNoQixRQUFRO3NCQUFoQixLQUFLO2dCQUNHLElBQUk7c0JBQVosS0FBSztnQkFDSSxlQUFlO3NCQUF4QixNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPbkluaXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBGb3JtQnVpbGRlciwgRm9ybUdyb3VwLCBWYWxpZGF0b3JzIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5pbXBvcnQgeyBNdXN0TWF0Y2ggfSBmcm9tICcuLi9jb3JlL19oZWxwZXJzL211c3QtbWF0Y2gudmFsaWRhdG9yJztcclxuaW1wb3J0IHsgQXV0aFNlcnZpY2UgfSBmcm9tICcuLi9jb3JlL19zZXJ2aWNlcy9hdXRoLnNlcnZpY2VzJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnc2hhcmVkLXNpZ251cCcsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL3NpZ251cC5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vc2lnbnVwLmNvbXBvbmVudC5zY3NzJ10sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTaWdudXBDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG5cclxuICBzaWdudXBGb3JtOiBGb3JtR3JvdXA7XHJcbiAgaXNGb3JtU3VibWl0OiBib29sZWFuO1xyXG5cclxuICBASW5wdXQoKSBwb3NpdGlvbiA9ICdmbG9hdGluZyc7XHJcbiAgQElucHV0KCkgbW9kZSA9IFwibW9kZVwiO1xyXG4gIEBPdXRwdXQoKSBzaWduVXBBcGlPdXRwdXQgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcblxyXG4gIGVtYWlsVmFsaWRhdGlvbiA9IFwiXigoW148PigpXFxcXFtcXFxcXVxcXFxcXFxcLiw7OlxcXFxzQFxcXCJdKyhcXFxcLltePD4oKVxcXFxbXFxcXF1cXFxcXFxcXC4sOzpcXFxcc0BcXFwiXSspKil8KFxcXCIuK1xcXCIpKUAoKFxcXFxbWzAtOV17MSwzfVxcXFwuWzAtOV17MSwzfVxcXFwuWzAtOV17MSwzfVxcXFwuWzAtOV17MSwzfVxcXFxdKXwoKFthLXpBLVpcXFxcLTAtOV0rXFxcXC4pK1thLXpBLVpdezIsfSkpJFwiO1xyXG4gIHBhc3N3b3JkVmFsaWRhdGlvbiA9IFwiXig/PS4qW0EtWmEtel0pKD89LipcXFxcZCkoPz0uKltAJCElKiM/Jl0pW0EtWmEtelxcXFxkQCQhJSojPyZdezgsfSRcIjtcclxuXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBwcml2YXRlIEZCOiBGb3JtQnVpbGRlcixcclxuICAgIHByaXZhdGUgYXV0aDogQXV0aFNlcnZpY2VcclxuICApIHtcclxuICAgIHRoaXMuc2V0RGVmYXVsdERhdGEoKTtcclxuICB9XHJcblxyXG4gIGdldCBmKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuc2lnbnVwRm9ybS5jb250cm9scztcclxuICB9XHJcblxyXG4gIG5nT25Jbml0KCkge31cclxuXHJcbiAgc2V0RGVmYXVsdERhdGEoKSB7XHJcbiAgICB0aGlzLmlzRm9ybVN1Ym1pdCA9IGZhbHNlO1xyXG4gICAgdGhpcy5zaWdudXBGb3JtID0gdGhpcy5GQi5ncm91cCh7XHJcbiAgICAgIGVtYWlsOiBbICcnLCBbXHJcbiAgICAgICAgVmFsaWRhdG9ycy5yZXF1aXJlZCxcclxuICAgICAgICBWYWxpZGF0b3JzLnBhdHRlcm4odGhpcy5lbWFpbFZhbGlkYXRpb24pIFxyXG4gICAgICBdXSxcclxuICAgICAgcGFzc3dvcmQ6IFsnJywgW1xyXG4gICAgICAgIFZhbGlkYXRvcnMucmVxdWlyZWQsXHJcbiAgICAgICAgVmFsaWRhdG9ycy5wYXR0ZXJuKHRoaXMucGFzc3dvcmRWYWxpZGF0aW9uKVxyXG4gICAgICBdXSxcclxuICAgICAgY29uZmlybTogWycnLCBbXHJcbiAgICAgICAgVmFsaWRhdG9ycy5yZXF1aXJlZFxyXG4gICAgICBdXVxyXG4gICAgfSwge1xyXG4gICAgICB2YWxpZGF0b3I6IE11c3RNYXRjaCgncGFzc3dvcmQnLCAnY29uZmlybScpXHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHNldEVtaXREYXRhKGRhdGEsIHR5cGUpIHtcclxuICAgIHN3aXRjaCh0eXBlLnRvU3RyaW5nKCkudG9Mb3dlckNhc2UoKSkge1xyXG4gICAgICBjYXNlICdlbWFpbCc6XHJcbiAgICAgICAgdGhpcy5mLmVtYWlsLnNldFZhbHVlKGRhdGEpO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICBjYXNlICdwYXNzd29yZCc6XHJcbiAgICAgICAgdGhpcy5mLnBhc3N3b3JkLnNldFZhbHVlKGRhdGEpO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICBjYXNlICdjb25maXJtJzpcclxuICAgICAgICB0aGlzLmYuY29uZmlybS5zZXRWYWx1ZShkYXRhKTtcclxuICAgICAgICBicmVhaztcclxuICAgICAgZGVmYXVsdDpcclxuICAgICAgICBicmVhaztcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHN1Ym1pdEZvcm0oKSB7XHJcbiAgICB0aGlzLmlzRm9ybVN1Ym1pdCA9IHRydWU7XHJcblxyXG4gICAgaWYgKHRoaXMuc2lnbnVwRm9ybS5pbnZhbGlkKSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLmF1dGguU2lnblVwKHRoaXMuZi5lbWFpbC52YWx1ZSwgdGhpcy5mLnBhc3N3b3JkLnZhbHVlKS50aGVuKHJlcyA9PiB7XHJcbiAgICAgIHRoaXMuc2lnblVwQXBpT3V0cHV0Lm5leHQoe1xyXG4gICAgICAgIGlzQXBpQ2FsbGVkOiB0cnVlLFxyXG4gICAgICAgIGlzQXBpU3VjY2VzczogdHJ1ZSxcclxuICAgICAgICByZXNwb25zZTogcmVzXHJcbiAgICAgIH0pO1xyXG4gICAgICBjb25zb2xlLmxvZyhyZXMpO1xyXG4gICAgfSkuY2F0Y2goZXJyID0+IHtcclxuICAgICAgdGhpcy5zaWduVXBBcGlPdXRwdXQubmV4dCh7XHJcbiAgICAgICAgaXNBcGlDYWxsZWQ6IHRydWUsXHJcbiAgICAgICAgaXNBcGlTdWNjZXNzOiBmYWxzZSxcclxuICAgICAgICByZXNwb25zZTogZXJyXHJcbiAgICAgIH0pO1xyXG4gICAgICBjb25zb2xlLmxvZygnU29tZXRoaW5nIHdlbnQgd3Jvbmc6JywgZXJyLm1lc3NhZ2UpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxufVxyXG4iLCI8aW9uLWNvbnRlbnQ+XHJcbiAgPGZvcm0gW2Zvcm1Hcm91cF09XCJzaWdudXBGb3JtXCIgKG5nU3VibWl0KT1cInN1Ym1pdEZvcm0oKVwiIG5vdmFsaWRhdGU+XHJcbiAgICA8aW9uLWl0ZW0gbGluZXM9XCJmdWxsXCIgW21vZGVdPVwibW9kZVwiPlxyXG4gICAgICA8dWktbGFiZWwgW3RleHRdPVwiJ0VtYWlsJ1wiIFtwb3NpdGlvbl09XCJwb3NpdGlvblwiIFttb2RlXT1cIm1vZGVcIj48L3VpLWxhYmVsPlxyXG4gICAgICA8dWktaW5wdXQgY2xhc3M9XCJ3aWR0aC0xMDBcIiBbbW9kZV09XCJtb2RlXCJcclxuICAgICAgICBbdHlwZV09XCIndGV4dCdcIiBbcmVxdWlyZWRdPVwidHJ1ZVwiIGZvcm1Db250cm9sTmFtZT1cImVtYWlsXCJcclxuICAgICAgICBbcGxhY2Vob2xkZXJdPVwiJ0VudGVyIGVtYWlsJ1wiIChuZXdWYWx1ZSk9XCJzZXRFbWl0RGF0YSgkZXZlbnQsICdlbWFpbCcpXCJcclxuICAgICAgPjwvdWktaW5wdXQ+XHJcbiAgICAgIDxzbWFsbCAqbmdJZj1cImlzRm9ybVN1Ym1pdCAmJiBmLmVtYWlsLmVycm9yc1wiPlxyXG4gICAgICAgIDx1aS1zcGFuICpuZ0lmPVwiZi5lbWFpbC5lcnJvcnMucmVxdWlyZWRcIiBbbW9kZV09XCJtb2RlXCIgW3RleHRdPVwiJ0VtYWlsIGlzIHJlcXVpcmVkJ1wiIFtjb2xvcl09XCInZGFuZ2VyJ1wiPjwvdWktc3Bhbj5cclxuICAgICAgICA8dWktc3BhbiAqbmdJZj1cImYuZW1haWwuZXJyb3JzLnBhdHRlcm5cIiBbbW9kZV09XCJtb2RlXCIgW3RleHRdPVwiJ0VtYWlsIGlzIGludmFsaWQnXCIgW2NvbG9yXT1cIidkYW5nZXInXCI+PC91aS1zcGFuPlxyXG4gICAgICA8L3NtYWxsPlxyXG4gICAgPC9pb24taXRlbT5cclxuICAgIDxpb24taXRlbSBsaW5lcz1cImZ1bGxcIiBbbW9kZV09XCJtb2RlXCI+XHJcbiAgICAgIDx1aS1sYWJlbCBbdGV4dF09XCInUGFzc3dvcmQnXCIgW21vZGVdPVwibW9kZVwiIFtwb3NpdGlvbl09XCJwb3NpdGlvblwiPjwvdWktbGFiZWw+XHJcbiAgICAgIDx1aS1pbnB1dCBjbGFzcz1cIndpZHRoLTEwMFwiIFttb2RlXT1cIm1vZGVcIlxyXG4gICAgICAgIFt0eXBlXT1cIid0ZXh0J1wiIFtyZXF1aXJlZF09XCJ0cnVlXCIgZm9ybUNvbnRyb2xOYW1lPVwicGFzc3dvcmRcIlxyXG4gICAgICAgIFtwbGFjZWhvbGRlcl09XCInRW50ZXIgcGFzc3dvcmQnXCIgKG5ld1ZhbHVlKT1cInNldEVtaXREYXRhKCRldmVudCwgJ3Bhc3N3b3JkJylcIlxyXG4gICAgICA+PC91aS1pbnB1dD5cclxuICAgICAgPHNtYWxsICpuZ0lmPVwiaXNGb3JtU3VibWl0ICYmIGYucGFzc3dvcmQuZXJyb3JzXCI+XHJcbiAgICAgICAgPHVpLXNwYW4gKm5nSWY9XCJmLnBhc3N3b3JkLmVycm9ycy5yZXF1aXJlZFwiIFttb2RlXT1cIm1vZGVcIiBbdGV4dF09XCInUGFzc3dvcmQgaXMgcmVxdWlyZWQnXCIgW2NvbG9yXT1cIidkYW5nZXInXCI+PC91aS1zcGFuPlxyXG4gICAgICAgIDx1aS1zcGFuICpuZ0lmPVwiZi5wYXNzd29yZC5lcnJvcnMucGF0dGVyblwiIFttb2RlXT1cIm1vZGVcIiBbdGV4dF09XCInUGFzc3dvcmQgaXMgaW52YWxpZCdcIiBbY29sb3JdPVwiJ2RhbmdlcidcIj48L3VpLXNwYW4+XHJcbiAgICAgIDwvc21hbGw+XHJcbiAgICA8L2lvbi1pdGVtPlxyXG4gICAgPGlvbi1pdGVtIGxpbmVzPVwiZnVsbFwiIFttb2RlXT1cIm1vZGVcIj5cclxuICAgICAgPHVpLWxhYmVsIFt0ZXh0XT1cIidDb25maXJtIFBhc3N3b3JkJ1wiIFttb2RlXT1cIm1vZGVcIiBbcG9zaXRpb25dPVwicG9zaXRpb25cIj48L3VpLWxhYmVsPlxyXG4gICAgICA8dWktaW5wdXQgY2xhc3M9XCJ3aWR0aC0xMDBcIiBbbW9kZV09XCJtb2RlXCJcclxuICAgICAgICBbdHlwZV09XCIncGFzc3dvcmQnXCIgW3JlcXVpcmVkXT1cInRydWVcIiBmb3JtQ29udHJvbE5hbWU9XCJjb25maXJtXCJcclxuICAgICAgICBbcGxhY2Vob2xkZXJdPVwiJ0VudGVyIGNvbmZpcm0gcGFzc3dvcmQnXCIgKG5ld1ZhbHVlKT1cInNldEVtaXREYXRhKCRldmVudCwgJ2NvbmZpcm0nKVwiXHJcbiAgICAgID48L3VpLWlucHV0PlxyXG4gICAgICA8c21hbGwgKm5nSWY9XCJpc0Zvcm1TdWJtaXQgJiYgZi5jb25maXJtLmVycm9yc1wiPlxyXG4gICAgICAgIDx1aS1zcGFuICpuZ0lmPVwiZi5jb25maXJtLmVycm9ycy5yZXF1aXJlZFwiIFttb2RlXT1cIm1vZGVcIiBbdGV4dF09XCInQ29uZmlybSBQYXNzd29yZCBpcyByZXF1aXJlZCdcIiBbY29sb3JdPVwiJ2RhbmdlcidcIj48L3VpLXNwYW4+XHJcbiAgICAgICAgPHVpLXNwYW4gKm5nSWY9XCJmLmNvbmZpcm0uZXJyb3JzLm11c3RNYXRjaFwiIFttb2RlXT1cIm1vZGVcIiBbdGV4dF09XCInQ29uZmlybSBQYXNzd29yZCBtdXN0IG1hdGNoIHdpdGggcGFzc3dvcmQnXCIgW2NvbG9yXT1cIidkYW5nZXInXCI+PC91aS1zcGFuPlxyXG4gICAgICA8L3NtYWxsPlxyXG4gICAgPC9pb24taXRlbT5cclxuICAgIDxpb24tcm93PlxyXG4gICAgICA8aW9uLWNvbD5cclxuICAgICAgICA8aW9uLWJ1dHRvbiB0eXBlPVwic3VibWl0XCIgY29sb3I9XCJwcmltYXJ5XCIgZXhwYW5kPVwiYmxvY2tcIiBbbW9kZV09XCJtb2RlXCI+U2lnbiBVcDwvaW9uLWJ1dHRvbj5cclxuICAgICAgPC9pb24tY29sPlxyXG4gICAgPC9pb24tcm93PlxyXG4gIDwvZm9ybT5cclxuPC9pb24tY29udGVudD4iXX0=